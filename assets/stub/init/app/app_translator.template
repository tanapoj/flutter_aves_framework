/// Project: {{#projectName}}
/// Author: {{#author}}
/// Created at: {{#createdAt}}

import 'package:aves/index.dart';
import 'package:flutter_live_data/live_source.dart';
import 'package:{{#projectName}}/app/app_provider.dart';
import 'package:{{#projectName}}/config/lang/translations.g.dart';
import 'package:{{#projectName}}/data/preference/app_pref.dart';

class _AppTranslator extends TranslationsEn {
  final AppPreference _pref = AppPreference();

  _AppTranslator() : super.build();

  AppLocale _locale = AppLocale.en;

  AppLocale get locale => _locale;

  late LiveData<AppLocale> $state = LiveSource(
    AppLocale.en,
    adapter: LiveDataSourceAdapter(
      saveData: (value) async {
        _pref.setAppLocale(value);
      },
    ),
  );

  syncInit() {}

  asyncInit() async {
    setLocale(await _pref.getAppLocale());
    return Future.value(null);
  }

  setLocale(AppLocale locale) {
    _locale = locale;
    LocaleSettings.instance.setLocale(_locale);
    $state.value = locale;
  }
}

class AppTranslator extends _AppTranslator {
  AppTranslator(App provider) : super() {
    $state.listen((value) {
      provider.changeNotify();
    });
  }

  switchLocale(AppLocale newLocale) {
    setLocale(newLocale);

    if (locale == AppLocale.en) {
      LocaleSettings.instance.setLocale(AppLocale.en);
      $state.value = locale;
    }
    if (locale == AppLocale.th) {
      LocaleSettings.instance.setLocale(AppLocale.th);
      $state.value = locale;
    }
  }

  void useEnglish() {
    switchLocale(AppLocale.en);
  }

  void useThai() {
    switchLocale(AppLocale.th);
  }

  bool get isUsingEnglish => locale == AppLocale.en;

  bool get isUsingThai => locale == AppLocale.th;

  @override
  String toString() {
    return 'AppTranslator{${$state.value}}';
  }
}
